security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: auto
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: mail
        app_id_provider:
            entity:
                class: App\Entity\User
                property: idUser

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        refresh:
            pattern:  ^/api/token_refresh
            stateless: true
            anonymous: true

        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /api/login_check
                username_path: mail
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern: ^/api/register
            stateless: true
            anonymous: true

        api:
            pattern: ^/api/
            stateless: true
            anonymous: true
            provider: app_id_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/login,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/register,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token_refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/,        roles: IS_AUTHENTICATED_FULLY }
